@using Kendo.Mvc.UI;
@using Kendo.Mvc.UI.Fluent;
@using ISS.Core.Model.Order;
@using ISS.Common;
@using ISS.Web.Helpers;

@model ISS.Core.Model.Order.WOMDetail



@using (Html.BeginForm("ExportWOMDetails", "../Order", FormMethod.Post, new { Id = "frmWOMDetail" }))
{
    <input type="hidden" name="gridData" id="gridData" />
   
    <input type="hidden" name="gridColumns" id="gridColumns" />
<table class="ttab" width="100%">
    <tr style="color:blue;">
        <td class="dspace"> </td>
        <td style="width:200px"><label> Total FQ DZ : </label> <label id="lblFQDZ"></label> </td>
        @*<td style="display:none;">
            @Html.RadioButtonFor(r => r.Views, "Default") Default View
            @Html.RadioButtonFor(r => r.Views, "Cylinder") Cylinder View
            @Html.RadioButtonFor(r => r.Views, "MSKU") Multi-SKU View
        </td>*@
        <td class="tspace"> </td>
        <td width="400px"> </td>
        <td class="Filters "><a class="linki2" id="filtergrid1" href="javascript:void(0)"> Filter Grid</a> </td>
        
        <td><label id="FilteredColumns" class="display-filters"></label></td>
        <td>
            <div class="btnContainer floatRight">
                @*<input type="submit" id="btnWOMExport" class="excel_btn" />*@
                <button class="k-button k-button-icontext k-grid-excel" id="btnWOMExport" type="submit"><span class="k-icon k-i-excel"></span>Export to Excel</button>

            </div>
        </td>
        <td class="dspace"> </td>
    </tr>
</table>

@(Html.Kendo().Grid<WOMDetail>()
    .Name("grdWOM")
    .HtmlAttributes(new { @class = "kgridheight" })
    .Columns(columns =>
    {

        columns.Command(command =>
        {
            //command.Custom("EditItem").Text(" ").Click("WOM.editOrderDetail");
            command.Custom("DeleteItem").Text(" ").Click("WOM.removeOrderDetail");

        }).Width(50).Locked(true);
        columns.Bound(s => s.ErrorMessage).Width(50).Locked(true)
                     .ClientTemplate("<span class='#=(ErrorStatus) ? 'k-icon k-warning':' '#' title=\"#=(ErrorStatus) ? ErrorMessage:' '#\"> </span> ");
        columns.ForeignKey<string>(p => p.Attribute, new List<dynamic>(), "Attribute", "AttributeDesc").EditorTemplateName("AttributeEditor").Width(LOVConstants.Width.Small3).Locked(true);
        columns.Bound(p => p.GroupId).Width(LOVConstants.Width.Small2).Locked(true);
        columns.Bound(p => p.OrderId).Width(LOVConstants.Width.Small3).Locked(true);
        columns.Bound(p => p.OrderType).Width(LOVConstants.Width.Small1).Locked(true);
        columns.ForeignKey<string>(p => p.OrderStatusDesc, new List<dynamic>(), "Value", "Text").EditorTemplateName("OrderStatusEditor").Width(LOVConstants.Width.Medium1).Locked(true);
        columns.Bound(p => p.SellingStyle).Width(LOVConstants.Width.Small2B).Locked(true);
        //Asif 10/9/2018 To Add Selling Sku popup while clicking in Selling Style in WOM screen
        //columns.Bound(p => p.SellingStyle).Width(LOVConstants.Width.Small2B).Locked(true).ClientTemplate("<a class='linki2 lnkSellStyle' href='javascript:void(0)' > #=SellingStyle# </a>").EditorTemplateName("SellingStyleEditor");
        columns.Bound(p => p.Style).Width(LOVConstants.Width.Style).Locked(true).ClientTemplate("<a class='linki2 lnkStyle' href='javascript:void(0)' > #=Style# </a>").EditorTemplateName("SellingStyleEditor");
        columns.ForeignKey<string>(p => p.Color, new List<dynamic>(), "Color", "ColorName").EditorTemplateName("ColorEditor").Width(LOVConstants.Width.Small2B).Locked(true);

        columns.ForeignKey<string>(p => p.SizeShortDes, new List<dynamic>(), "Size", "SizeDesc").EditorTemplateName("SizeEditor").Width(LOVConstants.Width.Small2).Locked(true);
        columns.Bound(p => p.GarmentSKU).Width(LOVConstants.Width.Large1).Locked(true)
              .ClientTemplate("<a class='linki2 lnkAWOMGSku' href='javascript:void(0)' > #if (GarmentSKU == null) {# #=''# #} else {# #=GarmentSKU# #}#  </a>"); ;
        columns.ForeignKey(p => p.Revision, new List<dynamic>(), "Rev", "RevDesc").EditorTemplateName("RevisionEditor").Width(LOVConstants.Width.Small2).Locked(true);


        columns.Bound(p => p.QtyEach).Width(LOVConstants.Width.Small3).HtmlAttributes(new { @class = "retOrdQty ob-right" }).EditorTemplateName("FQEditor");


        columns.Bound(p => p.CurrDueDate).Width(LOVConstants.Width.Medium1).ClientTemplate("<a class='linki2 lnkPipeDate' href='javascript:void(0)'> #=kendo.toString(CurrDueDate,'" + LOVConstants.DateFormatDisplay + "')# </a>").EditorTemplateName("DueDateEditor"); 
        
        columns.Bound(p => p.Atr).Width(LOVConstants.Width.Small2);
        columns.ForeignKey(p => p.MfgPath, new List<dynamic>(), "MfgPathId", "SewPlt").EditorTemplateName("MFGPathPEditor").Width(LOVConstants.Width.Small2);
        columns.Bound(p => p.DcLoc).Width(LOVConstants.Width.Small2);
        columns.Bound(p => p.ExpeditePriority).Width(LOVConstants.Width.Small2).EditorTemplateName("ExPriorityEditor");
        
        columns.Bound(p => p.DemandSource).Width(LOVConstants.Width.Medium1);
        columns.Bound(p => p.Rule).Width(LOVConstants.Width.Small1).HtmlAttributes(new { @class = "ob-right" });
        columns.Bound(p => p.Priority).Width(LOVConstants.Width.Small3).HtmlAttributes(new { @class = "ob-right" });
       
        columns.Bound(p => p.Enforcement).Width(LOVConstants.Width.Small2);
        columns.Bound(p => p.PackCode).Width(LOVConstants.Width.Small1);
        columns.Bound(p => p.MakeOrBuy).Width(LOVConstants.Width.Small2);
        columns.Command(command => command.Custom("View").Click("WOM.ShowNote") ).Width(100).Title("Note");
        
        columns.Bound(p => p.DemandDate).Width(LOVConstants.Width.Medium1).Format("{0:" + LOVConstants.DateFormatDisplay + "}");
        columns.Bound(p => p.OrderRef).Width(LOVConstants.Width.Medium1);
        columns.Bound(p => p.SuperOrder).Width(LOVConstants.Width.Medium1);
      
    }
    )
        .ToolBar(toolbar =>
            {
                toolbar.Custom().Name("GroupGrid").Text("Group");
                toolbar.Custom().Name("UngroupGrid").Text("Ungroup");
                toolbar.Custom().Name("Summarize").Text("Summarize");
                toolbar.Custom().Name("PendingGrid").Text("Pending");
                toolbar.Custom().Name("SelectAllGrid").Text("Select All");
                toolbar.Custom().Name("btndeletemulti").Text("Delete");
                toolbar.Custom().Name("btnundomulti").Text("Undo");
               
                //toolbar.Save();
            })
     .Selectable(sel =>
    {
        sel.Mode(GridSelectionMode.Multiple).Type(GridSelectionType.Row);
    })
     .Navigatable(navigation => navigation.Enabled(true))
     .AutoBind(false)
     .Editable(editable => editable.Mode(GridEditMode.InCell))
     .Resizable(rez=> rez.Columns(true))
    .Sortable()
    .Pageable(conf =>
                {
                    conf.PageSizes(ISS.Common.LOVConstants.PageSizes);
                    conf.Enabled(true);
                })
        .Scrollable(scroll =>
        {
           scroll.Enabled(true);
           scroll.Height(600);
        })
     .Events(ev => ev.DataBound("WOM.gridDataBound").Change("WOM.onRowsSelected"))

  .DataSource(dataSource => dataSource
            .Ajax()
            .ServerOperation(false)
            .Model(model =>
              {
                   model.Id(p => p.Id);
                   model.Field(p => p.ErrorMessage).Editable(false);
                   model.Field(p => p.GroupId).Editable(false);
                   model.Field(p => p.OrderId).Editable(false);
                   model.Field(p => p.OrderType).Editable(false);
                   model.Field(p => p.OrderStatusDesc).Editable(true);
                   model.Field(p => p.SellingStyle).Editable(false);
                   model.Field(p => p.GarmentSKU).Editable(false);
                   model.Field(p => p.Atr).Editable(false);
                   model.Field(p => p.DemandSource).Editable(false);
                   model.Field(p => p.Rule).Editable(false);
                   model.Field(p => p.Priority).Editable(false);
                   model.Field(p => p.Enforcement).Editable(false);
                   model.Field(p => p.PackCode).Editable(false);
                   model.Field(p => p.MakeOrBuy).Editable(false);
                   model.Field(p => p.DemandDate).Editable(false);
                   model.Field(p => p.OrderRef).Editable(false);
                   model.Field(p => p.SuperOrder).Editable(false);
              })
                .PageSize(ISS.Common.LOVConstants.DefaultPageSizes) //LOVConstants.DefaultPageSizes)
            .Read(read =>
            {
                read.Action("WOManagement", "AttributionOrder");
                read.Data("WOM.searchDataWOM");
            })
    )

)
<div class="clear"></div>
<br />

    <table class="ttab" width="100%">
        <tr class="blankrow1"></tr>
        <tr>
            <td>

                <div class="btnContainer floatRight">
                    @{bool? resDelete = MenuConfigHelper.IsMenuAuthorised(ConfigConstants.Actions.KA_ATTRIBUTION_MANAGEMENT_SAVE);}
                    @if (resDelete.HasValue && resDelete.Value)
                    {
                        <input type="submit" value="Cancel" id="btnCancel" />
                    }
                </div>

                <div class="btnContainer floatRight">
                    @{bool? resUpdate = MenuConfigHelper.IsMenuAuthorised(ConfigConstants.Actions.KA_ATTRIBUTION_MANAGEMENT_SAVE);}
                    @if ((resUpdate.HasValue && resUpdate.Value))
                    {
                        <input type="submit" value="Save" id="btnWOMSave" />
                    }
                </div>
            </td>
            <td></td>
        </tr>
        <tr class="blankrow1"></tr>
    </table>


    <div class="divNotePopup" style="display:none;">
        <div style="padding:5px">
           @Html.Hidden("hfWOMNote")
            <textarea id="txtWOMNote" style="height:100px;" cols="50"></textarea>
        </div> <div style="margin-top:5px;">
            @(Html.Kendo().Button()
                                .Name("btnWOMNote")
                                .Tag("em")
                                .Content("Save")
                                .Events(ev => ev.Click("WOM.SaveNote"))
            )
        </div>
    </div>

    <div class="divRevSearchPopup" style="display:none;">
        @Html.Partial("../../Views/Order/Partials/_PKGStyleSearch", new ISS.Core.Model.Order.WorkOrderDetail())
    </div>
}
 