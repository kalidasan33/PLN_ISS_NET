@using Kendo.Mvc.UI;
@using Kendo.Mvc.UI.Fluent;
@using ISS.Core.Model.Information;
@using ISS.Common;
@using ISS.Web.Helpers;
@model ISS.Core.Model.Information.ReleasesSearch
@{
    ViewBag.Title = "Releases";
 
}

@section scripts{
    @Scripts.Render("~/bundles/information" + ISSGlobals.Version)
}
<script type="text/javascript">
    $(document).ready(function () {
        information.docReleasesReady();
    });
</script>
 
@using (Html.BeginForm("", "", FormMethod.Post, new { Id = "frmReleases" }))
{

   
    @Html.Partial("Title", new KeyValuePair<String, String>("title", ViewBag.Title))

    <div class="expand planForm1 form1 width100" id="contentDiv">
         
        @(Html.Kendo().PanelBar()
        .Name("panelbar-images")
        .Items(panelbar =>
        {
            panelbar.Add().Text("Search Criteria")
                .Content(@<div>

                    <table class="ttab">
                        <tr class="blankrow1"></tr>
                        <tr>
                            <td> @Html.LabelFor(d => d.WorkCenter)</td>
                            <td class="dspace"> </td>
                            <td>@Html.LabelFor(d => d.Planner)</td>
                            <td class="dspace"> </td>
                            <td>@Html.LabelFor(d => d.SellingStyle)</td>
                            <td class="dspace"> </td>
                            <td>@Html.LabelFor(d => d.MfgStyle)</td>
                            <td class="dspace"> </td>
                            <td>@Html.LabelFor(d => d.Color)</td>
                            <td class="dspace"> </td>
                        </tr>
                        <tr>
                            <td>
                                @*@Html.Kendo().TextBoxFor(d => d.WorkCenter).HtmlAttributes(new { @class="clsupper"})*@
                                
                                <div class="planner-section1">
                                    <button class="k-button" onclick="return ISS.common.multiselectAll('WorkCenter', 'WorkCenter_Cd')" style="font-size:10px;">Select All</button>
                                    <button class="k-button" onclick="return ISS.common.multiunselectAll('WorkCenter')" style="font-size:10px;">UnSelect All</button>
                                    @(Html.Kendo().MultiSelectFor(m => m.WorkCenter)
                                    .Placeholder("Select Work Center...")
                                    .AutoBind(true)
                                    .AutoClose(false)
                                     .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("ReleaseGetWorkCenter", "Information");
                                          });
                                          source.ServerFiltering(false);
                                      })
                                      .DataTextField("WorkCenter_Cd")
                                      .DataValueField("WorkCenter_Cd")
                                    )
                                    
                                </div>
                            </td>

                            <td class="dspace"> </td>
                            <td>
                                @*@Html.Kendo().TextBoxFor(d => d.Planner).HtmlAttributes(new { @class="clsupper"})*@

                                <div class="planner-section">
                                    <button class="k-button" onclick="return ISS.common.multiselectAll('Planner', 'PlannerCd')" style="font-size:10px;">Select All</button>
                                    <button class="k-button" onclick="return ISS.common.multiunselectAll('Planner')" style="font-size:10px;">UnSelect All</button>
                                    @(Html.Kendo().MultiSelectFor(m => m.Planner)
                                    .Placeholder("Select Planners...")
                                    .AutoBind(true)
                                    .AutoClose(false)
                                     .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("ReleaseGetPlanner", "Information");
                                          });
                                          source.ServerFiltering(false);
                                      })
                                      .DataTextField("PlannerCd")
                                      .DataValueField("PlannerCd")
                                    )
                                    
                                </div>
                            </td>

                            <td class="dspace"> </td>
                            <td>@Html.Kendo().TextBoxFor(d => d.SellingStyle).HtmlAttributes(new { @class="clsupper"})</td>
                            <td class="dspace"> </td>
                            <td>@Html.Kendo().TextBoxFor(d => d.MfgStyle).HtmlAttributes(new { @class="clsupper"})</td>
                            <td class="dspace"> </td>
                            <td>@Html.Kendo().TextBoxFor(d => d.Color).HtmlAttributes(new { @class="clsupper"})</td>
                            <td class="dspace"> </td>
                        </tr>
                        <tr class="blankrow1"></tr>
                        <tr>
                            <td> @Html.LabelFor(d => d.Attribute)</td>
                            <td class="dspace"> </td>
                            <td>@Html.LabelFor(d => d.SewPlant)</td>
                            <td class="dspace"> </td>
                            <td>@Html.LabelFor(d => d.CutPlant)</td>
                            <td class="dspace"> </td>
                            <td>@Html.LabelFor(d => d.TextilePlant)</td>
                            <td class="dspace"> </td>
                            <td>@Html.LabelFor(d => d.LoginId)</td>
                            <td class="dspace"> </td>
                        </tr>
                        <tr> 
                            <td>@Html.Kendo().TextBoxFor(d => d.Attribute)</td>
                            <td class="dspace"> </td>
                            <td>@Html.Kendo().TextBoxFor(d => d.SewPlant).HtmlAttributes(new { @class = "" })</td>
                            <td class="dspace"> </td>
                            <td>@Html.Kendo().TextBoxFor(d => d.CutPlant).HtmlAttributes(new { @class = "" })</td>
                            <td class="dspace"> </td>
                            <td>@Html.Kendo().TextBoxFor(d => d.TextilePlant).HtmlAttributes(new { @class = "" })</td>
                            <td class="dspace"> </td>
                            <td>@Html.Kendo().TextBoxFor(d => d.LoginId).HtmlAttributes(new { @class=""})</td>
                            <td class="dspace"> </td>
                        </tr>
                        <tr class="blankrow1"></tr>

                        <tr>
                            <td colspan="9">
                                <div class="btnContainer floatRight">
                                    <input type="submit" value="Search" id="btnReleasesSearch" />
                                    <input type="reset" value="Clear" id="btnReleasesClear" />
                                   
                                </div>
                            </td>
                            <td></td>
                        </tr>
                        <tr class="blankrow1"></tr>
                    </table>

                    <div class="clear floatRight"></div>



                </div>).Expanded(true);

            panelbar.Add().Text("Search Results")
            .Content(@<div id="releaseResults">
                          <label id="FilteredColumns" class="display-filters"></label>
                          @*<div class="btnContainer floatRight">
        <input type="submit" id="btnReleasesExport" class="excel_btn" />

    </div>
    <br /><br />*@
                    @(Html.Kendo().Grid<Releases>().Name("grdReleases").HtmlAttributes(new { @class = "kgridheight" }).Columns(
                columns =>
                {
                    columns.Bound(p => p.RemoteSystem).Width(LOVConstants.Width.Medium1).Locked();
                    columns.Bound(p => p.UpdatedDate).Width(LOVConstants.Width.Medium4).Locked().Format("{0:" + LOVConstants.DateFormatDisplayTimeStamp + "}");
                    columns.Bound(p => p.OrderId).Width(LOVConstants.Width.Small2).Locked();
                    columns.Bound(p => p.SellingStyle).Width(LOVConstants.Width.Small3).Locked();
                    columns.Bound(p => p.StyleCode).Width(LOVConstants.Width.Small3).Locked();

                    columns.Bound(p => p.ColorCode).Width(LOVConstants.Width.Small2B);
                    columns.Bound(p => p.AttributeCode).Width(LOVConstants.Width.Attribute);
                    columns.Bound(p => p.SizeShortDesc).Width(LOVConstants.Width.Small2);
                    columns.Bound(p => p.DCloc).Width(LOVConstants.Width.Small2);

                    columns.Bound(p => p.SewPlant).Width(LOVConstants.Width.Small2);
                    columns.Bound(p => p.CutPlant).Width(LOVConstants.Width.Small2);
                    columns.Bound(p => p.textilePlant).Width(LOVConstants.Width.Small2);
                    columns.Bound(p => p.TotalCurrentOrderQuantity).Width(LOVConstants.Width.Small3).HtmlAttributes(new { @class = "ob-right" });
                    columns.Bound(p => p.RemoteUpdateCode).Width(LOVConstants.Width.Medium4);
                    columns.Bound(p => p.Reason).HtmlAttributes(new { style = "color:red;" }).Width(180)
                        .ClientTemplate("<a class='linki1 lnkReason' href='javascript:void(0)'> #=Reason# </a>" );

                    columns.Bound(p => p.MultiSKU).Width(LOVConstants.Width.Small3);
                    columns.Bound(p => p.SuperOrder).Width(LOVConstants.Width.Medium1);
                    columns.Bound(p => p.CuttingAlt).Width(LOVConstants.Width.Medium1);
                    columns.Bound(p => p.FabricLbs).Width(LOVConstants.Width.Medium1).HtmlAttributes(new { @class = "ob-right" });
                    columns.Bound(p => p.GreigeLbs).Width(LOVConstants.Width.Medium1).HtmlAttributes(new { @class = "ob-right" });
                    columns.Bound(p => p.CreateBD).Width(LOVConstants.Width.Medium1);
                    columns.Bound(p => p.DzOnly).Width(LOVConstants.Width.Small3);

                }
                )           
                .AutoBind(false)
                        .Scrollable(scroll =>
                        {
                            scroll.Enabled(true);
                            scroll.Height("500px");
                        }).Resizable(resizing => resizing.Columns(true)).Pageable(conf =>
                {
                    conf.PageSizes(ISS.Common.LOVConstants.PageSizes);
                    conf.Enabled(true);
                })
                         .ToolBar(toolbar =>
                                                        {
                                                            toolbar.Excel();
                                                            
                                                        })
                                                        .Excel(excel => excel
                                                                    .FileName("Releases" + DateTime.Now.ToString("yyyyMMddHHmmss") + ".xlsx")
                                                            .Filterable(true)
                                                            .AllPages(true)
                                                           
                                                         )
                                                         .Events(ev => ev.ExcelExport("information.excelExport"))

               .Filterable(filterable => filterable
                        .Extra(false)
                        .Operators(operators => operators
                            .ForString(str =>FilterHelper.FilterString(str))
                            .ForNumber(num => FilterHelper.FilterNumber(num))
                                     .ForDate(dte => FilterHelper.FilterDate(dte))  
                                                      
                        )
                        )
                .Sortable().Events(ev => ev.DataBound("information.gridDataBoundStyle"))
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .ServerOperation(false)
                            .PageSize(ISS.Common.LOVConstants.DefaultPageSizes)
                    .Read(read =>
                    {
                        read.Action("Releases", "Information");
                        read.Data("information.searchDataReleases");
                    })
                )
                    )


                </div>).Expanded(true);

        })


        )
        @*333  @Url.Action("ExceptionDetails", "Information") 44*@
    </div>
}
<div class="clear"></div>
<div class="divExceptionDetails" style="display:none;">
   
    @Html.Partial("ExceptionDetails",new ExceptionDetail())
</div>