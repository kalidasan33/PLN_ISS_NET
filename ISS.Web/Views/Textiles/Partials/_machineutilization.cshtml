@using ISS.Core.Model.Textiles;
@using Kendo.Mvc.UI;
@using Kendo.Mvc.UI.Fluent;
@using ISS.Common;

@model  System.Data.DataTable
@*<div class="btnContainer floatRight">
    <input type="submit" id="btnMachineAllocationExport" class="excel_btn" name="gridValue" value="machine" />
</div>
<br /><br />*@
@(Html.Kendo().Grid(Model)
                  .Name("grdMachineUtilization").HtmlAttributes(new { @class = "kgridheight" })
              .Columns(columns =>
               {
                   foreach (System.Data.DataColumn column in Model.Columns)
                   {
                       var c = columns.Bound(column.DataType, column.ColumnName).Width(LOVConstants.Width.Medium3);

                       if ((column.ColumnName == "Machine" || column.ColumnName == "Plant") && Model.Columns.Count>10)
                       {
                           c.Column.Locked = true;
                           c.HtmlAttributes(new { @class = "ob-right" });
                       }
                       
                       if (column.ColumnName.Contains("_"))
                       {
                           c.Title(column.ColumnName.Substring(1));
                           c.HtmlAttributes(new { @class = "ob-right" });
                       }
                       if (column.ColumnName == "_N_A")
                       {
                           c.Title("N/A");
                           c.HtmlAttributes(new { @class = "ob-right" });
                       }
                       if (column.ColumnName == "Total")
                       {
                           c.HtmlAttributes(new { @class = "ob-right" });
                       }

                       if ((column.ColumnName != "Machine" && column.ColumnName != "Plant" && column.ColumnName != "Total"))
                       {
                           c.ClientTemplate("<a data-machine=" + column.ColumnName + " class='linki2 lnkTextiles'  href='javascript:void(0)' > #if (" + (column.ColumnName) + " == null) {# #=''# #} else {# #=" + (column.ColumnName) + "# #}# </a>");
                       }
                                     
                   }
               }
                    )
                .Scrollable(scroll =>
                {
                    scroll.Enabled(true);
                    scroll.Height("auto");
                })
                    .ToolBar(toolbar =>
                                  {
                                      toolbar.Excel();
                                  })
                        .Excel(excel => excel
                                       .FileName("TextileMachineAllocations" + DateTime.Now.ToString("yyyyMMddHHmmss") + ".xlsx")
                                       .Filterable(true)
                                       .AllPages(true)
                               )
                .Resizable(resizing => resizing.Columns(true))
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Model(model =>
                            {
                                foreach (System.Data.DataColumn column in Model.Columns)
                                {
                                    model.Field(column.ColumnName, column.DataType);
                                }
                            })
                    .ServerOperation(false)                    
                     
                )
                .Events(ev => ev.DataBound("textiles.onTextileGridDataBound").ExcelExport("textiles.exportMachineUtlkendo"))
)
